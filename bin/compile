#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# clean up leaking environment
unset GIT_DIR

# config
POSTGRES_PACKAGE_URL="https://api.anvilworks.org/slugs/f26e5f59-2fd3-4244-a525-5c6cf287a5e4.tgz"
PG_VERSION="9.3.1"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"

function error() {
  echo " !     $*" >&2
  exit 1
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function package_download() {
  package="$1"
  location="$2"

  mkdir -p $location
  curl $package -s -o - | tar xzf - -C $location
}

echo "Using postgresql version: ${PG_VERSION}" | indent

# vendor directories
VENDORED_POSTGRESQL="vendor/pg"

# vendor postgres into the slug
echo "-----> Fetching and vendoring postgresql into slug"
package_download "${POSTGRES_PACKAGE_URL}" "${BUILD_DIR}/${VENDORED_POSTGRESQL}"

# setting .profile.d script for path
echo "-----> Copying .profile.d/pg.sh to add postgresql binaries to PATH"
mkdir -p $BUILD_DIR/.profile.d
cat<<\EOF > $BUILD_DIR/.profile.d/pg-path.sh
PATH=$PATH:$HOME/vendor/pg/bin
EOF

echo "-----> postgresql done"

